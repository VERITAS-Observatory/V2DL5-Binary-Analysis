[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=65", "setuptools-scm[toml]>=6.2" ]

[project]
name = "v2dl5"
description = "High-level analysis for binary light curves for VERITAS"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "Gernot Maier", email = "gernot.maier@desy.de" },
]
requires-python = ">=3.9"
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Astronomy",
]
dynamic = [ "version" ]
dependencies = [
  "astropy",
  "astroquery",
  "gammapy",
  "ipython",
  "pydantic",
]

optional-dependencies."tests" = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
]
urls."bug tracker" = "https://github.com/VERITAS-Observatory/V2DL5-Binary-Analysis/issues"
urls."repository" = "https://github.com/VERITAS-Observatory/V2DL5-Binary-Analysis"
scripts.v2dl5-generate-run-list = "v2dl5.scripts.generate_run_list:main"
scripts.v2dl5-generate-run-lists-for-significant-points = "v2dl5.scripts.generate_run_lists_for_significant_points:main"
scripts.v2dl5-generate-run-lists-from-target-list = "v2dl5.scripts.generate_run_lists_from_target_list:main"
scripts.v2dl5-plot-binary-light-curves = "v2dl5.scripts.plot_binary_light_curves:main"
scripts.v2dl5-print-simplified-light-curve = "v2dl5.scripts.print_simplified_light_curve:main"
scripts.v2dl5-reflected-region-analysis = "v2dl5.scripts.reflected_region_analysis:main"
scripts.v2dl5-split-binary-run-list = "v2dl5.scripts.split_binary_run_list:main"

[tool.setuptools]
packages = [ "v2dl5" ]
include-package-data = true

[tool.setuptools_scm]
write_to = "v2dl5/_version.py"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
indent-width = 4
exclude = [
  "__init__.py",
  "pyproject.toml",
  "simtools/_version.py",
]

format.indent-style = "space"
format.quote-style = "double"
format.line-ending = "auto"
# no documentation linting for test files
format.skip-magic-trailing-comma = false
lint.extend-select = [
  "A",   # built-in shadowing
  "C4",  # comprehension
  "COM", # flake8-commas
  "D",   # pydocstyle
  "F",   # pyflakes
  "G",   # logging
  "I",   # isort
  "ICN", # import name conventions
  "ISC", # implicit string concat rules
  "N",   # pep8 naming
  "NPY", # numpy
  "PT",  # pytest
  "RET", # return statements
  "RUF", # ruff
  "UP",  # pyupgrade
]
lint.ignore = [
  "COM812", # incompatible with ruff format
  "D208",   # over-indentation (incompatible with sphinx)
  "D214",   # section-not-over-indented
  "D215",   # section-underline-not-over-indented
  "G004",   # Logging statement uses f-string
  "ISC001", # incompatible with ruff format
  "N806",
  "RUF012", #  Mutable class attributes should be annotated
]
lint.per-file-ignores."**/tests/**" = [
  "D",
]
lint.per-file-ignores."**/tests_*.py" = [
  "D",
]

lint.pydocstyle.convention = "numpy"

[tool.isort]
profile = "black"
filter_files = true

[tool.pylint.main]
# Good variable names which should always be accepted, separated by a comma.
good-names = [
  "e",
  "i",
  "j",
  "k",
  "x",
  "y",
  "n",
  "f",
  "r",
  "ex",
  "db",
  "im",
  "sh",
  "ax",
  "ce",
  "xx",
  "yy",
  "zz",
  "C1",
  "C2",
  "C3",
  "C4",
  "C4x",
  "N1",
  "N2",
  "N3",
  "N4",
  "N4x",
  "lst",
  "mst",
  "sst",
  "sct",
  "hess",
  "magic",
  "veritas",
  "mask_V6_redHV",
]

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = [ "build", "docs/_build" ]
addopts = "-v"
testpaths = "v2dl5/tests/"
